name: Generate Documentation

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz cmake g++ python3-pip
        pip3 install sphinx breathe sphinx_rtd_theme
    
    - name: Create Documentation Structure
      run: |
        mkdir -p docs/doxygen
        mkdir -p docs/images
    
    - name: Generate Doxygen Documentation
      run: |
        doxygen Doxyfile
    
    - name: Create Index Page
      run: |
        cat > docs/doxygen/html/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>maph - High-Performance Memory-Mapped Key-Value Database</title>
            <meta name="description" content="maph is a high-performance memory-mapped database with O(1) lookups using perfect hash functions. Sub-microsecond access for JSON key-value storage.">
            <meta name="keywords" content="database, key-value, memory-mapped, mmap, perfect-hash, O(1), json, high-performance, approximate-data-structures">
            <meta name="author" content="maph contributors">
            <meta property="og:title" content="maph - Memory-Mapped Approximate Perfect Hash">
            <meta property="og:description" content="High-performance key-value database with guaranteed O(1) lookups">
            <meta property="og:type" content="website">
            <meta property="og:url" content="https://yourusername.github.io/rd_ph_filter/">
            <link rel="canonical" href="https://yourusername.github.io/rd_ph_filter/">
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 1200px; margin: 0 auto; padding: 20px; }
                header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 2rem; border-radius: 8px; margin-bottom: 2rem; }
                h1 { margin: 0; font-size: 2.5rem; }
                .subtitle { opacity: 0.95; margin-top: 0.5rem; }
                .features { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1.5rem; margin: 2rem 0; }
                .feature { background: #f7f7f7; padding: 1.5rem; border-radius: 8px; }
                .feature h3 { color: #667eea; margin-top: 0; }
                .buttons { display: flex; gap: 1rem; margin: 2rem 0; }
                .btn { display: inline-block; padding: 0.75rem 1.5rem; background: #667eea; color: white; text-decoration: none; border-radius: 5px; transition: transform 0.2s; }
                .btn:hover { transform: translateY(-2px); background: #5a67d8; }
                .btn-secondary { background: #48bb78; }
                .btn-secondary:hover { background: #38a169; }
                code { background: #f4f4f4; padding: 2px 6px; border-radius: 3px; font-family: monospace; }
                .performance { background: #e6fffa; padding: 1.5rem; border-radius: 8px; margin: 2rem 0; }
                .performance h2 { color: #234e52; }
                table { width: 100%; border-collapse: collapse; }
                th, td { padding: 0.75rem; text-align: left; border-bottom: 1px solid #ddd; }
                th { background: #f7f7f7; font-weight: 600; }
            </style>
        </head>
        <body>
            <header>
                <h1>maph</h1>
                <p class="subtitle">Memory-Mapped Approximate Perfect Hash</p>
                <p>High-performance key-value database with guaranteed O(1) lookups</p>
            </header>
            
            <div class="buttons">
                <a href="annotated.html" class="btn">API Documentation</a>
                <a href="https://github.com/yourusername/rd_ph_filter" class="btn btn-secondary">GitHub Repository</a>
                <a href="files.html" class="btn">Source Code</a>
            </div>
            
            <section>
                <h2>ðŸš€ Key Features</h2>
                <div class="features">
                    <div class="feature">
                        <h3>O(1) Lookups</h3>
                        <p>Guaranteed constant-time operations with perfect hash optimization</p>
                    </div>
                    <div class="feature">
                        <h3>Memory-Mapped Storage</h3>
                        <p>Zero-copy access via mmap for minimal memory overhead</p>
                    </div>
                    <div class="feature">
                        <h3>Lock-Free Operations</h3>
                        <p>Atomic operations for thread-safe concurrent access</p>
                    </div>
                    <div class="feature">
                        <h3>JSON Native</h3>
                        <p>Built-in support for JSON key-value storage</p>
                    </div>
                    <div class="feature">
                        <h3>REST API</h3>
                        <p>Production-ready HTTP interface with web UI</p>
                    </div>
                    <div class="feature">
                        <h3>SIMD Optimized</h3>
                        <p>AVX2 acceleration for batch operations</p>
                    </div>
                </div>
            </section>
            
            <section class="performance">
                <h2>âš¡ Performance</h2>
                <table>
                    <tr>
                        <th>Operation</th>
                        <th>Throughput</th>
                        <th>Latency</th>
                        <th>Notes</th>
                    </tr>
                    <tr>
                        <td>GET</td>
                        <td>10M ops/sec</td>
                        <td>&lt;100ns</td>
                        <td>O(1) with perfect hash</td>
                    </tr>
                    <tr>
                        <td>SET</td>
                        <td>8M ops/sec</td>
                        <td>&lt;150ns</td>
                        <td>Lock-free atomic updates</td>
                    </tr>
                    <tr>
                        <td>Batch GET</td>
                        <td>50M ops/sec</td>
                        <td>-</td>
                        <td>SIMD optimized</td>
                    </tr>
                    <tr>
                        <td>Scan</td>
                        <td>100M items/sec</td>
                        <td>-</td>
                        <td>Sequential memory access</td>
                    </tr>
                </table>
            </section>
            
            <section>
                <h2>ðŸ“š Documentation</h2>
                <ul>
                    <li><a href="annotated.html">API Reference</a> - Complete API documentation</li>
                    <li><a href="files.html">Source Files</a> - Browse source code</li>
                    <li><a href="modules.html">Modules</a> - Component organization</li>
                    <li><a href="namespaces.html">Namespaces</a> - Namespace reference</li>
                    <li><a href="pages.html">Related Pages</a> - Guides and tutorials</li>
                </ul>
            </section>
            
            <section>
                <h2>ðŸ”§ Quick Start</h2>
                <h3>C++ Usage</h3>
                <pre><code>#include &lt;maph.hpp&gt;

auto store = maph::Maph::create("mystore.maph", 1000000);
store->set(R"({"user": "alice"})", R"({"score": 95})");
auto value = store->get(R"({"user": "alice"})");  // O(1) lookup</code></pre>
                
                <h3>REST API</h3>
                <pre><code>curl -X POST http://localhost:8080/stores \
  -d '{"name": "products", "slots": 1000000}'
  
curl -X PUT 'http://localhost:8080/stores/products/keys/"sku:12345"' \
  -d '{"name": "Laptop", "price": 999}'</code></pre>
            </section>
            
            <section>
                <h2>ðŸ“Š Comparison with Other Systems</h2>
                <table>
                    <tr>
                        <th>System</th>
                        <th>Lookup</th>
                        <th>Space</th>
                        <th>Persistence</th>
                        <th>Use Case</th>
                    </tr>
                    <tr>
                        <td><strong>maph</strong></td>
                        <td>O(1)</td>
                        <td>Optimal</td>
                        <td>mmap</td>
                        <td>High-perf K/V</td>
                    </tr>
                    <tr>
                        <td>Redis</td>
                        <td>O(1) avg</td>
                        <td>10x overhead</td>
                        <td>AOF/RDB</td>
                        <td>Cache</td>
                    </tr>
                    <tr>
                        <td>RocksDB</td>
                        <td>O(log n)</td>
                        <td>Compressed</td>
                        <td>SST files</td>
                        <td>Large data</td>
                    </tr>
                    <tr>
                        <td>Memcached</td>
                        <td>O(1) avg</td>
                        <td>In-memory</td>
                        <td>None</td>
                        <td>Simple cache</td>
                    </tr>
                </table>
            </section>
            
            <footer style="margin-top: 4rem; padding-top: 2rem; border-top: 1px solid #ddd; text-align: center; color: #666;">
                <p>Â© 2024 maph contributors | <a href="https://github.com/yourusername/rd_ph_filter">GitHub</a> | <a href="annotated.html">API Docs</a></p>
            </footer>
        </body>
        </html>
        EOF
    
    - name: Setup Pages
      uses: actions/configure-pages@v3
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: 'docs/doxygen/html'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  # Optional: Build and test the project
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++
    
    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. -DBUILD_TESTS=ON
        make -j$(nproc)
    
    - name: Test
      run: |
        cd build
        ctest --output-on-failure